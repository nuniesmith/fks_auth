name: fks_auth CI

on:
  push:
    paths:
      - 'rust/fks_auth/**'
      - '.github/workflows/ci.yml'
  pull_request:
    paths:
      - 'rust/fks_auth/**'

jobs:
  build-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./rust/fks_auth
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            rust/fks_auth/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('rust/fks_auth/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Format check
        run: cargo fmt -- --check || true

      - name: Clippy (allow warnings for now)
        run: cargo clippy --all-targets -- -D warnings || true

      - name: Build
        run: cargo build --release

      - name: Test
        run: cargo test --all --release -- --nocapture

  docker-image:
    runs-on: ubuntu-latest
    needs: build-test
    if: github.ref == 'refs/heads/main'
    defaults:
      run:
        working-directory: ./rust/fks_auth
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: ./rust/fks_auth
          push: true
          tags: ghcr.io/${{ github.repository }}/fks_auth:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
